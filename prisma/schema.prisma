// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
}

model Booking {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  name        String
  email       String
  phone       String
  bookingDate DateTime
  bookingTime String
  status      String   @default("confirmed")

  @@map("bookings")
}

model Email {
  id        String      @id @default(cuid())
  email     String      @unique
  isValid   Boolean     @default(false)
  status    String      @default("pending") // pending, valid, invalid
  notes     String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  groups    EmailGroup[]

  @@map("emails")
}

model EmailGroup {
  id        String         @id @default(cuid())
  name      String
  emails    Email[]
  campaigns EmailCampaign[]
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt

  @@map("email_groups")
}

model EmailCampaign {
  id        String     @id @default(cuid())
  subject   String
  content   String     @db.Text
  status    String     // draft, sending, sent, failed
  sentAt    DateTime?
  group     EmailGroup @relation(fields: [groupId], references: [id])
  groupId   String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@map("email_campaigns")
}
